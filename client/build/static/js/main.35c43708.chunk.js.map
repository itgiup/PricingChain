{"version":3,"sources":["coms/metamask.svg","store/toast.js","store/web3Store.js","coms/ConnectWeb3.js","store/PricingChain.js","coms/BtnCopy.js","coms/Session.js","coms/Sessions.js","coms/Product.js","coms/Products.js","test.js","Admin.js","Pricing.js","App.js","serviceWorker.js","store/store.js","index.js"],"names":["module","exports","toast","createSlice","name","initialState","toastify","reducers","setToast","state","action","payload","notify","extraReducers","builder","actions","_switchChain","dev","CHAINS","1337","id","nativeCurrency","decimals","symbol","chainId","Web3","utils","toHex","rpcUrls","chainName","5777","97","blockExplorerUrls","iconUrls","80001","43113","1","getParamsById","params","Object","values","find","item","listParams","keys","map","v","includes","connectWeb3","createAsyncThunk","args","thunkAPI","a","web3","accounts","window","ethereum","enable","provider","providers","HttpProvider","eth","getAccounts","getChainId","console","error","switchChain","parseInt","getState","web3Store","networkVersion","request","method","then","r","log","catch","code","dispatch","message","web3Slice","updateAccounts","updateChain","addCase","fulfilled","length","ConnectWeb3","componentDidMount","on","props","connect","this","style","styles","com","onClick","img","src","metamaskImg","texts","DropdownButton","onSelect","title","dropChains","PricingChainABI","networks","Dropdown","Item","eventKey","key","slice","Component","cursor","width","borderWidth","borderStyle","borderColor","borderImage","boxShadow","display","marginRight","padding","margin","ownProps","connectContract","net","getId","networkId","deployedNetwork","contract","Contract","abi","address","owner","methods","call","getProducts","PricingChain","data","ipfsIDs","value","index","names","price","prices","ipfsID","getSessions","sessionIDs","sessionID","productID","productIDs","states","timeStarted","timeStarteds","timeout","timeouts","dosomething","d","setTimeout","PricingChainlice","products","sessions","something","fontawesome","library","add","faCopy","faTag","faCheck","BtnCopy","icon","copy","navigator","clipboard","writeText","setState","btnChecked","btnCopy","e","React","color","momentDurationFormatSetup","moment","faPlay","faPause","faHandHoldingDollar","faAnglesRight","faLock","faLockOpen","Session","validated","participant_pricings","timeLeft","getSession","listenEvents","session","events","onGuessPrice","event","returnValues","onPriceChange","target","onTimeoutChange","started","timeEnd","unix","now","duration","diff","Math","round","asSeconds","startSession","sessionid","send","from","res","substring","indexOf","split","closeSession","tongleSession","preventDefault","stopPropagation","setPrice","participants","pricing","asMinutes","guessPrice","disabled","popover","Popover","Header","as","Body","ListGroup","className","participant","Badge","bg","text","format","Col","Card","Img","variant","height","OverlayTrigger","trigger","placement","overlay","Title","Text","Form","noValidate","onSubmit","InputGroup","Control","placeholder","aria-label","aria-describedby","type","onChange","required","ButtonGroup","Button","fontSize","fontStyle","Sessions","wait","setInterval","clearInterval","onStartedSession","onClosedSession","Row","i","Alert","Product","createSession","product","imageCID","Buffer","require","Tx","Transaction","Products","imageCIDinvalid","productName","onImageCIDChange","image","trim","onproductNameChange","onProductAdded","onSetPrice","addProduct","filter","response","p","Feedback","mywallets","test","myproducts","mysesions","myProvider","HDWalletProvider","myWeb3","mycontract","addresses","onCreatedSession","status","doanGia","to","floor","random","location","reload","Admin","render","Accordion","defaultActiveKey","Pricing","IPFS","onPricing","connectIPFS","document","addEventListener","Ipfs","create","node","version","results","cid","path","cat","getInfo","pricings","onFileChange","fileRef","current","files","ipfsAddFile","file","reader","FileReader","readAsArrayBuffer","onload","result","_files","Set","localStorage","setItem","JSON","stringify","onerror","ppp","parentElement","getElementsByTagName","attributes","keyindex","createRef","Container","storageValue","MyLink","children","resolved","useResolvedPath","match","useMatch","pathname","end","Nav","Link","href","App","Navbar","Brand","element","position","autoClose","newestOnTop","closeOnClick","limit","pauseOnFocusLoss","draggable","pauseOnHover","Boolean","hostname","configureStore","reducer","web3Reducer","toastReducer","PricingChainReducer","middleware","getDefaultMiddleware","serializableCheck","ReactDOM","StrictMode","store","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.35c43708.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/metamask.c06f3a3e.svg\";","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { toast as toastify } from 'react-toastify';\r\n\r\n\r\n// export const connectWeb3 = createAsyncThunk(\r\n//     'connectWeb3',\r\n//     async (args, thunkAPI) => {\r\n//         return { web3, accounts };\r\n//     }\r\n// )\r\n\r\nexport const toast = createSlice({\r\n    name: \"toast\",\r\n    initialState: {\r\n        toast: toastify,\r\n    },\r\n    reducers: {\r\n        setToast: (state, action) => {\r\n            state.toast = action.payload\r\n            // console.log('setToast', state.toast, action)\r\n        },\r\n        notify: (state, action) => {\r\n            // console.log('notify', action)\r\n            if (typeof action.payload == typeof [])\r\n                state.toast[action.payload[1]](action.payload[0]);\r\n            else\r\n                state.toast[\"error\"](action.payload);\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        // builder.addCase(connectWeb3.fulfilled, (state, action) => {\r\n        // })\r\n    },\r\n})\r\n\r\n\r\nexport const { setToast, notify } = toast.actions;\r\n\r\nexport default toast.reducer;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport Web3 from \"web3\";\r\nimport { notify } from \"./toast\"\r\n\r\nconst dev = {\r\n    TEST: 'TEST',\r\n    MAINNET: 'MAINNET'\r\n}\r\n\r\nexport const CHAINS = {\r\n    1337: {\r\n        id: 1337,\r\n        nativeCurrency: {\r\n            name: 'ETH', decimals: 18, symbol: 'ETH'\r\n        },\r\n        chainId: Web3.utils.toHex(1337),\r\n        rpcUrls: ['HTTP://127.0.0.1:8545'],\r\n        chainName: 'Local',\r\n        dev: dev.TEST,\r\n    },\r\n    5777: {\r\n        id: 5777,\r\n        nativeCurrency: {\r\n            name: 'ETH', decimals: 18, symbol: 'ETH'\r\n        },\r\n        chainId: Web3.utils.toHex(5777),\r\n        rpcUrls: ['HTTP://127.0.0.1:8545'],\r\n        chainName: 'Local',\r\n        dev: dev.TEST,\r\n    },\r\n    97: {\r\n        id: 97,\r\n        nativeCurrency: {\r\n            name: 'tBNB', decimals: 18, symbol: 'tBNB'\r\n        },\r\n        chainId: Web3.utils.toHex(97),\r\n        rpcUrls: ['https://data-seed-prebsc-1-s1.binance.org:8545'],\r\n        chainName: 'Binance Smart Chain Testnet',\r\n        blockExplorerUrls: ['https://testnet.bscscan.com'],\r\n        iconUrls: \"https://testnet.bscscan.com/images/svg/brands/bnb.svg\",\r\n        dev: dev.TEST,\r\n    },\r\n    80001: {\r\n        id: 80001,\r\n        nativeCurrency: {\r\n            name: 'MATIC', decimals: 18, symbol: 'MATIC'\r\n        },\r\n        chainId: Web3.utils.toHex(80001),\r\n        rpcUrls: ['https://matic-mumbai.chainstacklabs.com'],\r\n        chainName: 'Polygon Testnet',\r\n        blockExplorerUrls: ['https://mumbai.polygonscan.com'],\r\n        dev: dev.TEST\r\n    },\r\n    43113: {\r\n        id: 43113,\r\n        nativeCurrency: {\r\n            name: 'AVAX', decimals: 18, symbol: 'AVAX'\r\n        },\r\n        chainId: Web3.utils.toHex(43113),\r\n        rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\r\n        chainName: 'Avalanche Testnet',\r\n        blockExplorerUrls: ['https://testnet.snowtrace.io/'],\r\n        dev: dev.TEST,\r\n    },\r\n    1: {\r\n        id: 1,\r\n        nativeCurrency: {\r\n            name: 'Ethereum', decimals: 18, symbol: 'ETH'\r\n        },\r\n        chainId: Web3.utils.toHex(1),\r\n        rpcUrls: ['https://mainnet.infura.io/v3/'],\r\n        chainName: 'Ethereum',\r\n        blockExplorerUrls: ['https://etherscan.io'],\r\n        dev: dev.MAINNET\r\n    },\r\n    getParamsById: (id) => {\r\n        //copy params\r\n        let params = { ...Object.values(CHAINS).find(item => item.id === id) };\r\n        const listParams = ['nativeCurrency', 'chainId', 'rpcUrls', 'chainName', 'blockExplorerUrls'];\r\n        Object.keys(params).map(v => {\r\n            if (!listParams.includes(v)) delete params[v];\r\n        });\r\n        return params;\r\n    },\r\n}\r\n\r\nexport const connectWeb3 = createAsyncThunk(\r\n    'connectWeb3',\r\n    async (args, thunkAPI) => {\r\n        // console.log('connecting Web3', args)\r\n        // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n        // Modern dapp browsers...\r\n        let web3 = null;\r\n        let accounts = [];\r\n        let chainId = 0;\r\n        try {\r\n            if (window.ethereum) {\r\n                web3 = new Web3(window.ethereum);\r\n                // Request account access if needed\r\n                await window.ethereum.enable();\r\n                // Accounts now exposed\r\n            }\r\n            // Legacy dapp browsers...\r\n            else if (window.web3) {\r\n                // Use Mist/MetaMask's provider.\r\n                web3 = window.web3;\r\n                // console.log(\"Injected web3 detected.\");\r\n            }\r\n            // Fallback to localhost; use dev console port by default...\r\n            else {\r\n                const provider = new Web3.providers.HttpProvider(\r\n                    \"http://127.0.0.1:8545\"\r\n                );\r\n                web3 = new Web3(provider);\r\n                // console.log(\"No web3 instance injected, using Local web3.\");\r\n            }\r\n            accounts = await web3.eth.getAccounts();\r\n            chainId = await web3.eth.getChainId()\r\n\r\n            // console.log('Web3 is: ', web3);\r\n        } catch (error) {\r\n            console.error('error ', error)\r\n        }\r\n        window.web3 = web3;\r\n        return { web3, accounts, chainId };\r\n    }\r\n)\r\nlet _switchChain;\r\nexport const switchChain = createAsyncThunk(\r\n    'switchChain',\r\n    _switchChain = async (args, thunkAPI) => {\r\n        let chainId = parseInt(args);\r\n        if (chainId === 5777) chainId = 1337;\r\n        // console.log('switchChain', chainId, notify(\"ádasd\"));\r\n        let web3 = thunkAPI.getState().web3Store.web3;\r\n        if (chainId && chainId !== parseInt(window.ethereum.networkVersion)) {\r\n            return window.ethereum.request({\r\n                method: 'wallet_switchEthereumChain',\r\n                params: [{ chainId: web3.utils.toHex(chainId) }]\r\n            }).then(r => {\r\n                console.log(\"switchEthereumChain success\", r);\r\n                return window.ethereum.networkVersion;\r\n            }).catch(error => {\r\n                // if chain was not added, add chain\r\n                if (error.code === 4902 || error.code === -32603) {\r\n                    let params = CHAINS.getParamsById(chainId);\r\n\r\n                    return window.ethereum.request({\r\n                        method: 'wallet_addEthereumChain',\r\n                        params: [params]\r\n                    }).then(r => {\r\n                        thunkAPI.dispatch(notify([\"add chain \" + params.chainName + \" success\", \" success\"]))\r\n                        return _switchChain(args, thunkAPI);\r\n                    }).catch(error => {\r\n                        console.error(error);\r\n                        thunkAPI.dispatch(notify(error.message))\r\n                    });\r\n                } else {\r\n                    console.error(\"chain error \", error)\r\n                }\r\n            })\r\n        }\r\n    }\r\n)\r\n\r\nexport const web3Slice = createSlice({\r\n    name: \"web3\",\r\n    initialState: {\r\n        web3: null,\r\n        accounts: [],\r\n        chainId: 1337,\r\n        chainName: \"web3\"\r\n    },\r\n    reducers: {\r\n        updateAccounts: (state, action) => {\r\n            state.accounts = action.payload;\r\n        },\r\n        updateChain: (state, action) => {\r\n            state.chainId = action.payload[0];\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(connectWeb3.fulfilled, (state, action) => {\r\n            console.log('conected Web3', action.payload)\r\n            state.web3 = action.payload.web3;\r\n            if (action.payload.accounts.length > 0 && CHAINS[action.payload.chainId]) {\r\n                state.accounts = action.payload.accounts;\r\n                state.chainId = action.payload.chainId;\r\n                state.chainName = CHAINS[action.payload.chainId].chainName;\r\n            };\r\n        });\r\n        builder.addCase(switchChain.fulfilled, (state, action) => {\r\n            console.log('switchChain return', action.payload)\r\n        })\r\n\r\n    },\r\n})\r\n\r\n\r\nexport const { updateAccounts } = web3Slice.actions;\r\n// console.log(\"actions\", web3Slice)\r\n\r\nexport default web3Slice.reducer;","import React, { Component } from \"react\";\r\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport { connect } from 'react-redux'\r\nimport { connectWeb3, updateAccounts, CHAINS, switchChain } from \"../store/web3Store\";\r\nimport metamaskImg from \"./metamask.svg\";\r\nimport PricingChainABI from \"../contracts/PricingChain\"\r\n\r\nclass ConnectWeb3 extends Component {\r\n    state = {\r\n    }\r\n    componentDidMount = async () => {\r\n        window.ethereum.on('chainChanged', (chainId) => {\r\n            this.props.updateChain(chainId);\r\n        });\r\n        window.ethereum.on('accountsChanged', (accounts) => {\r\n            console.log('accountsChanged', accounts);\r\n            this.props.updateAccounts(accounts);\r\n        });\r\n    }\r\n\r\n    connect = async () => {\r\n        await this.props.connectWeb3()\r\n    }\r\n\r\n    switchChain = async (chainId) => {\r\n        console.log(chainId);\r\n        this.props.switchChain(chainId);\r\n    }\r\n    render() {\r\n        const { accounts, chainId, chainName, } = this.props;\r\n        // console.log('ConnectWeb3:', accounts, chainId, chainName, CHAINS[chainId], Object.keys(PricingChainABI.networks))\r\n        return (\r\n            <label style={styles.com} onClick={this.connect}>\r\n                <label style={styles.img}><img src={metamaskImg} /></label>\r\n                <label style={styles.texts}>\r\n                    <div>\r\n                        <DropdownButton onSelect={this.switchChain} title={CHAINS[chainId] ? CHAINS[chainId].nativeCurrency.symbol : \"connect web3\"} style={styles.dropChains}>\r\n                            {Object.keys(PricingChainABI.networks).map(v => (\r\n                                <Dropdown.Item eventKey={v} key={v}>\r\n                                    {CHAINS[v] ? CHAINS[v].chainName : v}</Dropdown.Item>\r\n                            ))}\r\n                        </DropdownButton>\r\n                    </div>\r\n                    <div>{(accounts.length > 0) ? \"0x...\" + accounts[0].slice(-3) : \"connect web3\"}</div>\r\n                </label>\r\n            </label>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    com: {\r\n        cursor: 'pointer',\r\n        width: 'fit-content',\r\n        borderWidth: 3,\r\n        borderStyle: \"solid\",\r\n        borderColor: \"black\",\r\n        borderImage: \"linear-gradient(45deg, turquoise, greenyellow) 1 / 1 / 0 stretch\",\r\n        boxShadow: \"rgb(170 170 170) 2px 2px 2px\",\r\n    },\r\n    img: {\r\n        display: \"inline-grid\",\r\n        cursor: 'pointer',\r\n        marginRight: 5\r\n    },\r\n    texts: {\r\n        cursor: 'pointer',\r\n    },\r\n    dropChains: {\r\n        padding: 1,\r\n        margin: 1,\r\n    },\r\n\r\n}\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    web3: state.web3Store.web3,\r\n    accounts: state.web3Store.accounts,\r\n    chainId: state.web3Store.chainId,\r\n    chainName: state.web3Store.chainName,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    connectWeb3: connectWeb3,\r\n    updateAccounts,\r\n    switchChain: switchChain,\r\n})(ConnectWeb3);\r\n\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport PricingChainABI from \"../contracts/PricingChain.json\";\r\nimport { notify } from \"./toast\"\r\n\r\n// console.log(\"PricingChainABI\", PricingChainABI.abi.filter(v => v.type == 'event').map(v => v.name))\r\n\r\nexport const connectContract = createAsyncThunk(\r\n    'connectContract',\r\n    async (args, thunkAPI) => {\r\n        try {\r\n            let web3 = thunkAPI.getState().web3Store.web3;\r\n            // Get the contract instance.\r\n            const networkId = await web3.eth.net.getId();\r\n            const deployedNetwork = PricingChainABI.networks[networkId];\r\n            const contract = new web3.eth.Contract(\r\n                PricingChainABI.abi,\r\n                deployedNetwork && deployedNetwork.address,\r\n            );\r\n            let owner = null;\r\n            if (contract)\r\n                owner = await contract.methods.owner().call();\r\n            return { contract, owner };\r\n        } catch (error) {\r\n            console.error(error)\r\n            thunkAPI.dispatch(notify(error.message))\r\n            return { contract: null, owner: null };\r\n        }\r\n    }\r\n)\r\n\r\nexport const getProducts = createAsyncThunk(\r\n    'getProducts',\r\n    async (args, thunkAPI) => {\r\n        try {\r\n            // let web3 = thunkAPI.getState().web3Store.web3;\r\n            let contract = thunkAPI.getState().PricingChain.contract\r\n            let data = await contract.methods.getProducts().call();\r\n            return data.ipfsIDs.map((value, index) => {\r\n                return {\r\n                    id: index,\r\n                    name: data.names[index],\r\n                    price: data.prices[index],\r\n                    ipfsID: value,\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.error('error ', error)\r\n            return []\r\n        }\r\n    }\r\n)\r\n\r\nexport const getSessions = createAsyncThunk(\r\n    'getSessions',\r\n    async (args, thunkAPI) => {\r\n        // console.log('getSessions')\r\n        try {\r\n            // let web3 = thunkAPI.getState().web3Store.web3;\r\n            let contract = thunkAPI.getState().PricingChain.contract\r\n            let data = await contract.methods.getSessions().call();\r\n            // console.log('getSessions', data);\r\n            return data.sessionIDs.map((sessionID, index) => {\r\n                return {\r\n                    id: parseInt(index),\r\n                    ipfsID: data.ipfsIDs[index],\r\n                    name: data.names[index],\r\n                    price: parseInt(data.prices[index]),\r\n                    productID: parseInt(data.productIDs[index]),\r\n                    sessionID: parseInt(sessionID),\r\n                    state: parseInt(data.states[index]),\r\n                    timeStarted: parseInt(data.timeStarteds[index]),\r\n                    timeout: parseInt(data.timeouts[index]),\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.error('error ', error)\r\n            return []\r\n        }\r\n    }\r\n)\r\n\r\nexport const dosomething = createAsyncThunk(\r\n    'dosomething',\r\n    async (args, thunkAPI) => {\r\n        // console.log(args, thunkAPI.getState())\r\n        let d = 1;\r\n        setTimeout(() => { d = 2 }, 2000);\r\n        return d;\r\n    }\r\n)\r\nexport const PricingChainlice = createSlice({\r\n    name: 'PricingChain',\r\n    initialState: {\r\n        contract: null,\r\n        products: [],\r\n        sessions: [],\r\n        owner: null,\r\n        address: null,\r\n        something: 1,\r\n    },\r\n    reducers: {\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(connectContract.fulfilled, (state, action) => {\r\n            state.contract = action.payload.contract\r\n            state.owner = action.payload.owner;\r\n            // console.log(state, action.payload);\r\n        })\r\n\r\n        builder.addCase(getSessions.fulfilled, (state, action) => {\r\n            state.sessions = action.payload;\r\n            // console.log('getSessions: ', action.payload);\r\n        })\r\n\r\n        builder.addCase(getProducts.fulfilled, (state, action) => {\r\n            state.products = action.payload;\r\n            // console.log('getProducts: ', action.payload);\r\n        })\r\n\r\n        builder.addCase(dosomething.fulfilled, (state, action) => {\r\n            state.something += action.payload;\r\n        })\r\n    },\r\n})\r\n\r\nexport const { } = PricingChainlice.actions;\r\n\r\nexport default PricingChainlice.reducer;\r\n\r\n// console.log('PricingChainlice', PricingChainlice.reducer)\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { Row, Col, InputGroup, Form, Button, Card, ListGroup } from 'react-bootstrap';\r\nimport fontawesome from '@fortawesome/fontawesome'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faCopy, faTag } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { connectWeb3 } from \"../store/web3Store\";\r\nimport { getProducts, getSessions, connectContract, } from \"../store/PricingChain\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfontawesome.library.add(faCopy, faTag, faCheck);\r\n\r\nclass BtnCopy extends React.Component {\r\n    state = { icon: <FontAwesomeIcon icon=\"fas fa-copy\" /> }\r\n\r\n    copy = (value) => {\r\n        // console.log(this.state.icon)\r\n        navigator.clipboard.writeText(value);\r\n        this.setState({ icon: <FontAwesomeIcon icon=\"fas fa-check\" style={styles.btnChecked} /> })\r\n        setTimeout(() => {\r\n            this.setState({ icon: <FontAwesomeIcon icon=\"fas fa-copy\" /> })\r\n        }, 1500);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <label style={styles.btnCopy} onClick={(e) => this.copy(this.props.value)}>\r\n                {this.state.icon}\r\n            </label >\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    btnCopy: {\r\n        cursor: \"pointer\"\r\n    },\r\n    btnChecked: {\r\n        cursor: \"pointer\", color: \"green\"\r\n    },\r\n}\r\nexport default BtnCopy;","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport moment from \"moment\";\r\nimport momentDurationFormatSetup from \"moment-duration-format\";\r\nimport \"moment-timer\";\r\n\r\nimport { Popover, Col, InputGroup, Form, Button, Card, ListGroup, ButtonGroup, OverlayTrigger, Alert, Badge } from 'react-bootstrap';\r\nimport fontawesome from '@fortawesome/fontawesome'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay, faPause, faHandHoldingDollar, faAnglesRight, faLock, faLockOpen } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { connectWeb3 } from \"../store/web3Store\";\r\nimport { getSessions, connectContract } from \"../store/PricingChain\";\r\nimport BtnCopy from \"./BtnCopy\";\r\nimport { notify } from \"../store/toast\";\r\n\r\nmomentDurationFormatSetup(moment);\r\n\r\nfontawesome.library.add(faPlay, faPause, faHandHoldingDollar, faAnglesRight, faLock, faLockOpen);\r\n\r\nclass Session extends Component {\r\n    state = {\r\n        validated: true, timeout: 0, price: 0, participant_pricings: [], timeLeft: -0,\r\n    }\r\n    componentDidMount = async () => {\r\n        await this.getSession();\r\n        this.timeLeft();\r\n        this.listenEvents();\r\n    }\r\n\r\n    listenEvents = () => {\r\n        const { session, contract } = this.props;\r\n        if (contract) {\r\n            contract.events.onGuessPrice((error, event) => {\r\n                if (error) throw error;\r\n                else {\r\n                    if (parseInt(event.returnValues.id) === session.id) {\r\n                        this.getSession(session.id);\r\n                    }\r\n                }\r\n            });\r\n            // contract.events.onClosedSession((error, event) => {\r\n            //     if (error) throw error;\r\n            //     else {\r\n            //         if (parseInt(event.returnValues.id) === session.id) {\r\n            //             this.timeLeft();\r\n            //             console.log(\"onClosedSession\", event.returnValues);\r\n            //         }\r\n            //     }\r\n            // });\r\n        } else setTimeout(this.listenEvents, 200);\r\n    }\r\n\r\n    onPriceChange = (e) => {\r\n        let value = e.target.value;\r\n        this.setState({ price: value })\r\n    }\r\n\r\n    onTimeoutChange = (e) => {\r\n        let value = parseInt(e.target.value);\r\n        this.setState({ timeout: value > 0 ? value : 0 })\r\n    }\r\n\r\n    timeLeft = () => {\r\n        const { session, contract, accounts, notify } = this.props;\r\n        let started = session.timeStarted;\r\n        let timeout = session.timeout; // seconds\r\n        if (session.state === 1 && started > 0 && timeout > 0) {\r\n            let timeEnd = moment.unix(started + timeout);\r\n            let now = moment();\r\n            let duration = moment.duration(now.diff(timeEnd));\r\n            if (duration < 0) {\r\n                this.setState({ timeLeft: Math.round(duration.asSeconds()) });\r\n            }\r\n        } else this.setState({ timeLeft: -0 });\r\n        setTimeout(this.timeLeft, 1000);\r\n    }\r\n\r\n    startSession = async (sessionid, timeout = 0) => {\r\n        const { session, contract, accounts, notify } = this.props;\r\n        contract.methods.startSession(sessionid, timeout * 60).send({ from: accounts[0] })\r\n            .then((res) => {\r\n                // console.log('startSession res', res.events.onStartedSession.returnValues.p);\r\n                notify([\"start Session success\", \"success\"])\r\n            })\r\n            .catch(error => {\r\n                let message = 'error: ' + error.message.substring(error.message.indexOf('\"reason\":\"'), error.message.indexOf('},\"stack\":')).split(':')[1]\r\n                notify(message);\r\n                console.error('startSession error', error);\r\n            })\r\n    }\r\n\r\n    closeSession = async (sessionid) => {\r\n        const { session, contract, accounts, notify } = this.props;\r\n        contract.methods.closeSession(sessionid).send({ from: accounts[0] })\r\n            .then((res) => {\r\n                // console.log('closeSession res', res.events.onClosedSession.returnValues.p);\r\n                notify([\"close Session success\", \"success\"])\r\n            })\r\n            .catch(error => {\r\n                let message = 'error: ' + error.message.substring(error.message.indexOf('\"reason\":\"'), error.message.indexOf('},\"stack\":')).split(':')[1]\r\n                notify(message);\r\n                console.error('close Session error', error);\r\n            })\r\n    }\r\n\r\n    tongleSession = async (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const { session, contract, accounts, notify } = this.props;\r\n\r\n        if (session.state === 1) {\r\n            this.closeSession(session.id);\r\n        } else this.startSession(session.id, this.state.timeout);\r\n    }\r\n\r\n    setPrice = async (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { session, contract, accounts, notify } = this.props;\r\n        contract.methods.setPrice(session.id, this.state.price, session.productID).send({ from: accounts[0] })\r\n            .then((res) => {\r\n                // console.log('setPrice res', res.events.onSetPrice.returnValues);\r\n                notify(\"set price success\");\r\n            })\r\n            .catch(error => {\r\n                let message = 'error: ' + error.message.substring(error.message.indexOf('\"reason\":\"'), error.message.indexOf('},\"stack\":')).split(':')[1]\r\n                notify(message);\r\n                console.error('setPrice error', error);\r\n            })\r\n    }\r\n\r\n    getSession = async (id = this.props.session.id) => {\r\n        try {\r\n            let data = await this.props.contract.methods.getSession(id).call();\r\n            // console.log('getSession', data);\r\n\r\n            let session = {\r\n                id: parseInt(data.sessionID),\r\n                productID: parseInt(data.productID),\r\n                ipfsID: data.ipfsID,\r\n                name: data.name,\r\n                price: parseInt(data.price),\r\n                state: parseInt(data.state),\r\n                participant_pricings: data.participants.map((address, index) => ({\r\n                    address: address,\r\n                    pricing: parseInt(data.participant_pricings[index])\r\n                })),\r\n                timeStarted: parseInt(data.timeStarted),\r\n                timeout: parseInt(data.timeout),\r\n            }\r\n            this.setState({\r\n                price: session.price,\r\n                timeout: moment.duration(session.timeout, 'seconds').asMinutes(),\r\n                participant_pricings: session.participant_pricings\r\n            });\r\n            return session;\r\n        } catch (error) {\r\n            console.error('error ', error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    guessPrice = async (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { session, contract, accounts, notify } = this.props;\r\n        contract.methods.guessPrice(session.id, this.state.price).send({ from: accounts[0] })\r\n            .then((res) => {\r\n                notify([\"pricing susscess\", \"success\"]);\r\n                this.getSession();\r\n            })\r\n            .catch(error => {\r\n                let message = 'Error: ' + error.message.substring(error.message.indexOf('\"reason\":\"'), error.message.indexOf('},\"stack\":')).split(':')[1]\r\n                notify(message);\r\n                console.error('guessPrice error', error, session);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { session, accounts, owner } = this.props;\r\n        let disabled = 0 === session.state || this.state.participant_pricings.length >= 10\r\n        /* Danh sách đã dự đoán giá */\r\n        const popover = (\r\n            <Popover id=\"popover-basic\">\r\n                <Popover.Header as=\"h3\">Người đã chơi ({this.state.participant_pricings.length})</Popover.Header>\r\n                <Popover.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                        {this.state.participant_pricings.map((participant, index) => (\r\n                            <ListGroup.Item className=\"text-center\" key={index}>\r\n                                ..{participant.address.slice(-3)} <Badge bg=\"warning\" text=\"dark\"> {participant.pricing} $</Badge>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                </Popover.Body>\r\n            </Popover>\r\n        );\r\n        let timeStarted = moment.unix(session.timeStarted).format('YYYY-MM-DD  HH:mm:ss');\r\n        return (\r\n            <Col>\r\n                <Card style={{ width: '18rem' }} >\r\n                    <Card.Img variant=\"top\" src={\"https://gateway.pinata.cloud/ipfs/\" + session.ipfsID} style={{ height: '18rem' }} />\r\n                    <Card.Body>\r\n                        <OverlayTrigger trigger={[\"hover\", \"hover\"]} placement=\"right\" overlay={popover}>\r\n                            <Card.Title>\r\n                                {disabled ? <FontAwesomeIcon icon=\"fa-solid fa-lock\" color=\"#0d6efdd9\" /> : <FontAwesomeIcon icon=\"fas fa-lock-open\" color=\"#099956d9\" />}&nbsp;\r\n                                {session.name} <Badge bg=\"warning\" text=\"dark\">{session.price} $</Badge > <FontAwesomeIcon icon=\"fas fa-angles-right\" color=\"#0d6efdab\" /></Card.Title>\r\n                        </OverlayTrigger>\r\n                        <Card.Text style={styles.ipfsID}>\r\n                            {session.ipfsID}&nbsp;\r\n                            <BtnCopy value={session.ipfsID} />\r\n                            <div style={styles.timeStarted}>\r\n                                {session.timeStarted > 0 ?\r\n                                    (<>{timeStarted} <Badge bg=\"warning\" text=\"dark\" style={styles.timeLeft}>{this.state.timeLeft}s</Badge></>) :\r\n                                    \"Not started\"}\r\n                            </div>\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                        <ListGroup.Item className=\"text-center\">\r\n                            {accounts[0] === owner ?\r\n                                <> {/* Phần dành cho admin */}\r\n                                    <Form noValidate onSubmit={this.tongleSession}>\r\n                                        <InputGroup className=\"mb-3\">\r\n                                            <InputGroup.Text id=\"timeout\">⏳\"</InputGroup.Text>\r\n                                            <Form.Control\r\n                                                placeholder=\"product's price...\"\r\n                                                aria-label=\"name\"\r\n                                                aria-describedby=\"timeout\"\r\n                                                value={this.state.timeout} type=\"number\"\r\n                                                onChange={this.onTimeoutChange}\r\n                                                required\r\n                                            />\r\n                                            <ButtonGroup>\r\n                                                {session.state === 1 ?\r\n                                                    <Button variant=\"danger\" type=\"submit\" ><FontAwesomeIcon icon=\"fas fa-pause\" /> Close session</Button> :\r\n                                                    <Button variant=\"success\" type=\"submit\" ><FontAwesomeIcon icon=\"fas fa-play\" /> Start session</Button>\r\n                                                } </ButtonGroup></InputGroup>\r\n                                    </Form>\r\n\r\n                                    {/* Đặt giá cho sản phẩm */}\r\n                                    <Form noValidate validated={this.state.validated} onSubmit={this.setPrice}>\r\n                                        <InputGroup className=\"mb-3\">\r\n                                            <InputGroup.Text id=\"addonPrice\">$</InputGroup.Text>\r\n                                            <Form.Control\r\n                                                placeholder=\"product's price...\"\r\n                                                aria-label=\"name\"\r\n                                                aria-describedby=\"addonPrice\"\r\n                                                value={this.state.price} type=\"number\"\r\n                                                onChange={this.onPriceChange}\r\n                                                required\r\n                                            />\r\n                                            <Button type=\"submit\">Set Price</Button>\r\n                                        </InputGroup>  </Form>\r\n                                </> : /* Phần dành cho user tham gia chơi */ (\r\n                                    <Form noValidate validated={this.state.validated} onSubmit={this.guessPrice}>\r\n                                        <InputGroup className=\"mb-3\">\r\n                                            <InputGroup.Text id=\"addonPrice\">$</InputGroup.Text>\r\n                                            <Form.Control\r\n                                                placeholder=\"product's price...\"\r\n                                                aria-label=\"name\"\r\n                                                aria-describedby=\"addonPrice\"\r\n                                                value={this.state.price} type=\"number\"\r\n                                                onChange={this.onPriceChange}\r\n                                                required\r\n                                                disabled={disabled}\r\n                                            />\r\n                                            <Button type=\"submit\" disabled={disabled}>Guess Price</Button>\r\n                                        </InputGroup>  </Form>\r\n                                )\r\n                            }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col >\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    ipfsID: {\r\n        color: \"#555\"\r\n    },\r\n    timeStarted: {\r\n        fontSize: \"12px\",\r\n        fontStyle: \"italic\",\r\n    },\r\n    timeLeft: {\r\n        fontSize: \"1em\",\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        web3: state.web3Store.web3,\r\n        accounts: state.web3Store.accounts,\r\n        contract: state.PricingChain.contract,\r\n        sessions: state.PricingChain.sessions,\r\n        owner: state.PricingChain.owner,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    connectWeb3: connectWeb3,\r\n    getSessions: getSessions,\r\n    connectContract: connectContract, notify,\r\n})(Session);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { Col, Tab, Alert, ListGroup, Row } from 'react-bootstrap';\r\nimport { connectWeb3 } from \"../store/web3Store\";\r\nimport { getSessions, connectContract } from \"../store/PricingChain\";\r\nimport Session from \"./Session\";\r\n\r\n\r\nclass Sessions extends Component {\r\n    componentDidMount = async () => {\r\n        const { contract, accounts, notify } = this.props;\r\n        if (!contract) {\r\n            this.props.connectContract();\r\n        }\r\n        // khởi động contract\r\n        let wait = setInterval(() => {\r\n            if (this.props.contract) {\r\n                this.props.getSessions();\r\n                this.listenEvents(this.props.contract);\r\n                clearInterval(wait);\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    listenEvents = (contract) => {\r\n        const { getSessions } = this.props;\r\n\r\n        contract.events.onStartedSession((error, event) => {\r\n            if (error) throw error;\r\n            else {\r\n                // console.log(\"onStartedSessions\", event.returnValues);\r\n                getSessions();\r\n            }\r\n        })\r\n        contract.events.onClosedSession((error, event) => {\r\n            if (error) throw error;\r\n            else {\r\n                // console.log(\"onClosedSessions\", event.returnValues);\r\n                getSessions();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { contract, sessions } = this.props;\r\n\r\n        if (!contract) {\r\n            return (\r\n                <Alert variant={'danger'}>\r\n                    Connect contract error!\r\n                </Alert>)\r\n        }\r\n        return (\r\n            <Row>\r\n                {sessions.map((session, i) => (\r\n                    <Session session={session} key={session.id} />\r\n                ))}\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    web3: state.web3Store.web3,\r\n    accounts: state.web3Store.accounts,\r\n    contract: state.PricingChain.contract,\r\n    sessions: state.PricingChain.sessions\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    connectWeb3: connectWeb3,\r\n    getSessions: getSessions,\r\n    connectContract: connectContract,\r\n})(Sessions);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col, InputGroup, Form, Button, Card, ListGroup } from 'react-bootstrap';\r\n\r\nimport BtnCopy from \"./BtnCopy\"\r\nimport { notify } from \"../store/toast\";\r\n\r\nimport { connectWeb3 } from \"../store/web3Store\";\r\nimport { getProducts, getSessions, connectContract, } from \"../store/PricingChain\";\r\n\r\n\r\nclass Product extends Component {\r\n\r\n    createSession = async (productID) => {\r\n        const { web3, contract, owner, accounts, notify } = this.props;\r\n        if (!web3)\r\n            notify(\"web3 was not connected\");\r\n        else if (!contract)\r\n            notify(\"contract was not connected\");\r\n        else if (owner !== accounts[0])\r\n            notify(\"you are not admin\");\r\n        else {\r\n            // alert(productID)\r\n            contract.methods.createSession(productID).send({ from: accounts[0] })\r\n                .then(res => {\r\n                    // console.log('respone:', res.events.onCreatedSession.returnValues)\r\n                    notify([\"created Session success\", 'success'])\r\n                })\r\n                .catch(error => {\r\n                    if (error.code === 4001) notify(\"You rejected\");\r\n                })\r\n        }\r\n    }\r\n    render() {\r\n        const { accounts, owner, product } = this.props;\r\n        return (\r\n            <Col>\r\n                <Card style={{ width: '18rem' }} >\r\n                    <Card.Img variant=\"top\" src={\"https://gateway.pinata.cloud/ipfs/\" + product.ipfsID} style={{ height: '18rem' }} />\r\n                    <Card.Body>\r\n                        <Card.Title>{product.name}</Card.Title>\r\n                        <Card.Text style={styles.ipfsID}>\r\n                            {product.ipfsID}&nbsp;\r\n                            <BtnCopy value={product.ipfsID} />\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                        <ListGroup.Item className=\"text-center\">\r\n                            {/* Phần dành cho admin */}\r\n                            {accounts[0] === owner ?\r\n                                <> <b>{product.price === \"0\" ? \"?\" : product.price}</b> $ <Button onClick={e => this.createSession(product.id)}>Create session</Button></>\r\n                                : (<></>)\r\n                            }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    imageCID: {\r\n    },\r\n    ipfsID: {\r\n        color: \"#555\"\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        web3: state.web3Store.web3,\r\n        accounts: state.web3Store.accounts,\r\n        contract: state.PricingChain.contract,\r\n        owner: state.PricingChain.owner,\r\n        products: state.PricingChain.products,\r\n        sessions: state.PricingChain.sessions,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    connectWeb3: connectWeb3,\r\n    getSessions: getSessions,\r\n    connectContract: connectContract,\r\n    getProducts: getProducts,\r\n    notify,\r\n})(Product);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Row, InputGroup, Form, Button, Alert } from 'react-bootstrap';\r\nimport fontawesome from '@fortawesome/fontawesome'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faCopy, faTag } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { connectWeb3 } from \"../store/web3Store\";\r\nimport { getProducts, connectContract, dosomething, } from \"../store/PricingChain\";\r\nimport { setToast, notify } from \"../store/toast\";\r\n\r\nimport BtnCopy from \"./BtnCopy\"\r\nimport Product from \"./Product\"\r\n\r\nwindow.Buffer = require('buffer/').Buffer\r\nwindow.Tx = require('@ethereumjs/tx').Transaction;\r\n\r\nfontawesome.library.add(faCopy, faTag, faCheck);\r\n\r\nclass Products extends Component {\r\n    state = {\r\n        imageCID: \"\", imageCIDinvalid: \"\",\r\n        productName: \"\",\r\n        validated: false, btnCopy: (<label>copy</label>)\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        if (this.props.contract == null) {\r\n            this.props.connectContract();\r\n        }\r\n        // khởi động contract\r\n        let wait = setInterval(() => {\r\n            if (this.props.contract != null) {\r\n                this.props.getProducts();\r\n                this.listenEvents(this.props.contract);\r\n                clearInterval(wait);\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    onImageCIDChange = (e) => {\r\n        let image = e.target.value.trim();\r\n        this.setState({ imageCID: image });\r\n    }\r\n\r\n    onproductNameChange = (e) => {\r\n        let name = e.target.value;\r\n        this.setState({ productName: name });\r\n    }\r\n\r\n    listenEvents = (contract) => {\r\n        contract.events.onGuessPrice((error, event) => {\r\n            if (error) throw error;\r\n            else {\r\n                // console.log('onGuessPrice: ', event, error);\r\n                this.props.getProducts();\r\n            }\r\n        });\r\n        contract.events.onProductAdded((error, event) => {\r\n            if (error) throw error;\r\n            else {\r\n                this.props.getProducts();\r\n            }\r\n        });\r\n        contract.events.onSetPrice((error, event) => {\r\n            if (error) throw error;\r\n            else {\r\n                this.props.getProducts();\r\n            }\r\n        })\r\n    }\r\n\r\n    addProduct = async (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const { imageCID } = this.state;\r\n        const { contract, accounts, products, notify } = this.props;\r\n        if (imageCID === \"\") {\r\n            console.error(\"ipfs error\")\r\n            notify(\"ipfs error\")\r\n            this.setState({ imageCIDinvalid: \"ipfs error\" })\r\n        } else if (products.filter(product => product.ipfsID === imageCID).length > 0) {\r\n            notify('Product exists image')\r\n            this.setState({ imageCIDinvalid: \"Product exists image\" })\r\n        } else if (!contract) {\r\n            console.error(\"contract error\")\r\n            notify(\"contract error\")\r\n            this.setState({ imageCIDinvalid: \"contract error\" })\r\n        } else {\r\n            contract.methods.addProduct(this.state.imageCID, this.state.productName.trim()).send({ from: accounts[0] })\r\n                .then((response) => {\r\n                    console.log(\"addProduct success: \", response)\r\n                    notify(['addProduct success', \"success\"])\r\n                    this.setState({\r\n                        imageCID: \"\", imageCIDinvalid: \"\",\r\n                        productName: \"\",\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    if (error.code === 4001) {\r\n                        notify(\"User rejected\")\r\n                    } else {\r\n                        let message = 'Add product fail: ' + error.message.substring(error.message.indexOf('\"reason\":\"'), error.message.indexOf('},\"stack\":')).split(':')[1]\r\n                        console.error(error)\r\n                        notify(message)\r\n                    }\r\n                });\r\n        }\r\n    }\r\n    render() {\r\n        const { accounts, products, owner, contract } = this.props;\r\n        if (!contract) {\r\n            return (\r\n                <Alert variant={'danger'}>\r\n                    Connect contract error!\r\n                </Alert>)\r\n        }\r\n        return (\r\n            <>\r\n                <Row>\r\n                    {products.map((p, i) => (\r\n                        <Product key={i} product={p} />\r\n                    ))}\r\n                </Row>\r\n                {/* thêm sảm phẩm */}\r\n                {accounts[0] === owner ? (\r\n                    <Row>\r\n                        <Form noValidate validated={this.state.validated} onSubmit={this.addProduct}>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Text id=\"addon_ipfs\">ipfs:</InputGroup.Text>\r\n                                <Form.Control\r\n                                    placeholder=\"Q...\"\r\n                                    aria-label=\"ipfs\"\r\n                                    aria-describedby=\"addon_ipfs\"\r\n                                    value={this.state.imageCID}\r\n                                    onChange={this.onImageCIDChange}\r\n                                    style={styles.imageCID}\r\n                                    required\r\n                                />\r\n                                <InputGroup.Text id=\"addon_name\">name:</InputGroup.Text>\r\n                                <Form.Control\r\n                                    placeholder=\"product's name...\"\r\n                                    aria-label=\"name\"\r\n                                    aria-describedby=\"addon_name\"\r\n                                    value={this.state.productName}\r\n                                    onChange={this.onproductNameChange}\r\n                                    style={styles.productName}\r\n                                    required\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.imageCIDinvalid}\r\n                                </Form.Control.Feedback>\r\n                                <Button type=\"submit\">Add products</Button>\r\n                            </InputGroup>\r\n                        </Form>\r\n                    </Row>) : \" \"}\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    imageCID: {\r\n    },\r\n    ipfsID: {\r\n        color: \"#555\"\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    web3: state.web3Store.web3,\r\n    accounts: state.web3Store.accounts,\r\n    contract: state.PricingChain.contract,\r\n    owner: state.PricingChain.owner,\r\n    products: state.PricingChain.products,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    connectWeb3: connectWeb3,\r\n    connectContract: connectContract,\r\n    getProducts: getProducts,\r\n    setToast, notify,\r\n})(Products);\r\n","import HDWalletProvider from \"@truffle/hdwallet-provider\";\r\nimport Web3 from \"web3\";\r\nimport moment from \"moment\";\r\nimport momentDurationFormatSetup from \"moment-duration-format\";\r\nimport \"moment-timer\";\r\n\r\nimport PricingChain from \"./contracts/PricingChain.json\";\r\n\r\nmomentDurationFormatSetup(moment);\r\n\r\nlet mywalletsP = [\r\n    '58cda6528e72266566dba1c09cd2687a1ea202ec536f5e66bef7b219e63f0688',\r\n    '6bbc25ad0d901b44a3d7e3cd16b931145dd92f011e89ba79f65d23e013da0e1c',\r\n    '038fad47b484cdfbe34d7fb19b6ec7d25edd78c33e711987763218766a874a9c',\r\n    'a81db92a93023a6f88aa0814e0b0f8545c7359e3802fde2f69e5359e3c6f39d9',\r\n    'f8c513e274eccf8f35099ef922858318cf4160ebd32ad299c565becf990196f4',\r\n    '92030c6cfb1db8c280c87313f7518436c1b7c67760ed479a87ba5d9c85d793c7',\r\n    '9a91aff1de275dc7348a4f0fcd3eceb784fbeb297fd33b93568cba64bf0a9f94',\r\n    '2ed3f7fa145bbabda5ba8d0000c2f1c84d74e4a858e3f300609b7cef2b280f3a',\r\n    'cdf1ad786621d7b3a978c6544a2ade0b8c927258ca2268b2635c777497cc238d',\r\n    '8c8e898a3e45ed44c4c9a77b1ee834c22cbd395f54358c6af8fa2199f0beb87d',\r\n    'f25963a7823c0ce05f24d23a224bf448f74829211d895df105ccc7fe83b99f54',\r\n];\r\nlet mywalletsL = [\r\n    'ad888e1d74cf790c3f855d5f01bc3d53b61d3c831a050661e24a21aeb988bcc9',\r\n    '4aa846366ddee8dc5df9ef91f0174a9ae70a3fc9a1950895da6d9070b6874ad4',\r\n    '9e9f942cb787aa4b6da2ce9ed64d6d98277c4ad0b53b23abdc2a8af7fa3ab189',\r\n    '95cc3e33e9a69338c9b1a3b5f3b87a1765374faca4c07c824bba1d7389aa2311',\r\n    '03373a2b11375ce10e33e96e66a7b5718afeaef8801dcbadabf3bcc75808419f',\r\n    '7cbd274bd6532cc01a943d8279702ff90de63b5b8e19bb9b284c761f5262711e',\r\n    'e4fe708b05c6fe70db53486a6cba60f0dc11c163ef887793b24250bbf76b9fe7',\r\n    'd7124453f3980b334acbb46cc8cb050e08586d5f56238ec09e4ad6e5a36e9821',\r\n    '010872bce0ec5143e06ac90298411e130a604482f58b072ebda7d2e74a3b593c',\r\n    '2ba5132cea19ab1bb375da46042bf3d483fcbc6e469ef0cc11b40c0c116970dc',\r\n    '90068cd91943ab8f32a2b2a536634ce3cb340372897ec393c81662ebbb5935fd',\r\n];\r\n\r\nlet mywallets = mywalletsL;\r\n\r\nconst test1 = async () => {\r\n    window.myProvider = new HDWalletProvider(mywallets, \"http://localhost:8545\", 0, 10);\r\n    window.myWeb3 = new Web3(window.myProvider)\r\n    let contract =\r\n        window.mycontract =\r\n        new window.myWeb3.eth.Contract(PricingChain.abi, PricingChain.networks[5777].address);\r\n    contract.methods.test().call({ from: window.myProvider.addresses[0] })\r\n        .then(rse => {\r\n            const now = new Date(parseInt(rse) * 1000);\r\n            let v = moment.unix(rse, 'YYYY/MM/DD HH:mm:ss');\r\n            console.log(v)\r\n        })\r\n        .catch(console.error)\r\n}\r\n\r\nconst test2 = async () => {\r\n    // if (!contract) return alert('error.....')\r\n    // else \r\n    let myproducts = [\r\n        {\r\n            name: \"giày golf\",\r\n            ipfsID: \"QmNndBy2XHuM4f2vVwmykfkEXytAcrAX88HCfFC2V6VYNL\"\r\n        },\r\n        {\r\n            name: \"sim eject\",\r\n            ipfsID: \"QmcfykxRQcFjHJEBmng7RSHUf1FzzfpmPYVEu6Lmaf14rZ\"\r\n        },\r\n        {\r\n            name: \"samsung\",\r\n            ipfsID: \"QmXNzeqXwqtjJoUS3nS5CgJad9sspsaf5BKNadU8rLuGiF\"\r\n        },\r\n        {\r\n            name: \"iphone 11\",\r\n            ipfsID: \"QmbMjGZp3TgHUJuY4QNm9n1qg9Wy5LvG3MA36XiLi7QJx2\"\r\n        },\r\n        {\r\n            name: \"galaxy s22\",\r\n            ipfsID: \"QmSy425yK2bjAzWp2ba68HzFdAfwtfD64auk52xs5LoxQr\"\r\n        },\r\n    ];\r\n    let mysesions = [\r\n        { productID: 0 },\r\n        { productID: 1 },\r\n        { productID: 2 },\r\n    ];\r\n    let pricings = [\r\n        {\r\n            address: \"0x795667b1E4d057Aae442cdee09896D7d81e8da13\", sessionID: \"0\", pricing: 6,\r\n            address: \"0x89C3aC8D824035DA67d5F253F3dc87e40cB59F7B\", sessionID: \"0\", pricing: 5,\r\n            address: \"0xC6a3Fe62fEAdA8DE965c152344A5764435916935\", sessionID: \"0\", pricing: 4,\r\n            address: \"0x987ed3543Bae6306cd589653117b6ce40BadAfe8\", sessionID: \"0\", pricing: 2,\r\n            address: \"0x939A0e9a5FB30c8C7c3410eA40965A9B0F77BCB6\", sessionID: \"0\", pricing: 8,\r\n            address: \"0xE2EcdE4E3c91ffd2a45A087937Ca970802D93f84\", sessionID: \"0\", pricing: 9,\r\n            address: \"0x194416cbF451892e0A2EA80058Efe73A37739865\", sessionID: \"0\", pricing: 10,\r\n            address: \"0x4201f1142757f3BeabD5427a96a1Cf1DeC4Bc283\", sessionID: \"0\", pricing: 12,\r\n            address: \"0xB1163FD94FE6B0Cb9eA6e1b64Eab714df96CeED8\", sessionID: \"0\", pricing: 11,\r\n            address: \"0x7C0584373EE7251AA5Ad7eaDFc2aD23aA7c5158b\", sessionID: \"0\", pricing: 5,\r\n        }\r\n    ];\r\n    window.myProvider = new HDWalletProvider(mywallets, \"http://localhost:8545\", 0, 10);\r\n    window.myWeb3 = new Web3(window.myProvider)\r\n    let contract =\r\n        window.mycontract =\r\n        new window.myWeb3.eth.Contract(PricingChain.abi, PricingChain.networks[5777].address);\r\n    // thêm sản phẩm\r\n    (async () => myproducts.map(p => {\r\n        contract.methods.addProduct(p.ipfsID, p.name).send({ from: window.myProvider.addresses[0] })\r\n            .then(() => {\r\n                console.log(\"success add \", p.name);\r\n            }).catch(error => {\r\n                console.error(error.message);\r\n            })\r\n    }))()\r\n\r\n        // thêm session\r\n        .then(() => mysesions.map(p => {\r\n            contract.methods.createSession(p.productID).send({ from: window.myProvider.addresses[0] })\r\n                .then((res) => {\r\n                    console.log(\"success createSession \", res.events.onCreatedSession.returnValues);\r\n                }).catch(error => {\r\n                    console.error(error.message);\r\n                })\r\n        }))\r\n\r\n        // kích hoạt session 0\r\n        .then(() => contract.methods.startSession(0, 0).send({ from: window.myProvider.addresses[0] })\r\n            .then(res => console.log(\"stated session 0\", res.status)))\r\n\r\n        // các ví người chơi tham gia đoán giá\r\n        .then(() => {\r\n            let doanGia = (i = 1, to = 10) => {\r\n                if (i <= to) {\r\n                    contract.methods.guessPrice(0, Math.floor(Math.random() * 11) + 1).send({ from: window.myProvider.addresses[i] })\r\n                        .then(res => console.log(res.events.onGuessPrice.returnValues));\r\n                    return doanGia(i + 1, to);\r\n                } else return true;\r\n            }\r\n            return doanGia(1, 4);\r\n        })\r\n        .then(window.location.reload);\r\n}\r\n\r\nconst test = test2;\r\n\r\nexport default test;","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { Col, Button, Alert, ListGroup, Row, Accordion } from 'react-bootstrap';\r\nimport { connectWeb3 } from \"./store/web3Store\";\r\nimport ConnectWeb3 from \"./coms/ConnectWeb3\";\r\n\r\nimport Sessions from \"./coms/Sessions\";\r\nimport Products from \"./coms/Products\";\r\n\r\nimport test from \"./test\"\r\nclass Admin extends Component {\r\n    componentDidMount = async () => {\r\n        const { web3, accounts } = this.props;\r\n        await this.props.connectWeb3()\r\n\r\n        window.ethereum.on('chainChanged', (chainId) => {\r\n            // console.log(chainId);\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    getSession = async () => {\r\n        const { web3, accounts } = this.props;\r\n    }\r\n\r\n    render = () => {\r\n        const { web3, accounts, sessions, products } = this.props;\r\n        if (!web3 || !accounts || accounts.length === 0) return (\r\n            <Alert variant={\"danger\"}  >\r\n                <ConnectWeb3 />\r\n            </Alert>\r\n        );\r\n        return (\r\n            <><Button onClick={test}>Test</Button>\r\n                <Accordion defaultActiveKey=\"1\">\r\n                    <Accordion.Item eventKey=\"0\">\r\n                        <Accordion.Header>Products({products.length})</Accordion.Header>\r\n                        <Accordion.Body>  <Products /></Accordion.Body>\r\n                    </Accordion.Item>\r\n                    <Accordion.Item eventKey=\"1\">\r\n                        <Accordion.Header>Sessions({sessions.length})</Accordion.Header>\r\n                        <Accordion.Body>  <Sessions /></Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    web3: state.web3Store.web3,\r\n    accounts: state.web3Store.accounts,\r\n    sessions: state.PricingChain.sessions,\r\n    products: state.PricingChain.products,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    connectWeb3: connectWeb3,\r\n})(Admin);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { Button, Col, Container, Form, FormControl, InputGroup, Row } from 'react-bootstrap';\r\nimport fontawesome from '@fortawesome/fontawesome'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee, faCopy, faTag } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { connectWeb3 } from \"./store/web3Store\";\r\nimport { getProducts, getSessions, connectContract, } from \"./store/PricingChain\";\r\nimport Products from \"./coms/Products\";\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfontawesome.library.add(faCopy, faTag);\r\n\r\nclass Pricing extends Component {\r\n    state = {\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.fileRef = React.createRef();\r\n    }\r\n\r\n    IPFS = null;\r\n\r\n    componentDidMount = async () => {\r\n        if (!this.props.contract)\r\n            await this.props.connectContract();\r\n        await this.props.getProducts();\r\n        this.listenEvents()\r\n        // this.connectIPFS();\r\n    };\r\n\r\n    listenEvents = () => {\r\n        let { contract } = this.props\r\n        contract.events.onCreatedSession((error, event) => {\r\n            if (error) throw error;\r\n            else {\r\n                console.log('onCreatedSession: ', event, error);\r\n                this.props.getSessions();\r\n            }\r\n        })\r\n        contract.events.onStartedSession((error, event) => {\r\n            if (error) throw error;\r\n            else {\r\n                console.log('onStartedSession: ', event, error);\r\n                this.props.getSessions();\r\n                this.props.getProducts();\r\n            }\r\n        })\r\n        contract.events.onClosedSession((error, event) => {\r\n            if (error) throw error;\r\n            else {\r\n                console.log('onClosedSession: ', event, error);\r\n                this.props.getSessions();\r\n                this.props.getProducts();\r\n            }\r\n        })\r\n        contract.events.onPricing((error, event) => {\r\n            if (error) throw error;\r\n            else {\r\n                console.log('onPricing: ', event, error);\r\n                this.props.getProducts();\r\n            }\r\n        })\r\n        contract.events.onProductAdded((error, event) => {\r\n            if (error) throw error;\r\n            else {\r\n                this.props.getProducts();\r\n            }\r\n        })\r\n    }\r\n    \r\n    connectIPFS = async () => {\r\n        document.addEventListener('DOMContentLoaded', async () => {\r\n            const node = this.IPFS = window.IPFS = await window.Ipfs.create();\r\n            window.IPFS.version().then(r => console.log('IFPS node:', r.version))\r\n\r\n            const results = await node.add('=^.^= chào bạn ')\r\n            console.log('node.add:', results)\r\n\r\n            const cid = results.path\r\n            console.log('CID created via ipfs.add:', cid)\r\n            const data = await node.cat(cid)\r\n            console.log('Data read back via ipfs.cat:', data)// new TextDecoder().decode(data))\r\n            // node.cat(cid).then(r => {\r\n            //   console.log('Data read back via ipfs.cat: ', r)\r\n            // })\r\n        })\r\n    }\r\n\r\n    getInfo = async () => {\r\n        this.getSessions();\r\n    }\r\n\r\n    getSessions = () => {\r\n        const { web3, contract, pricings } = this.state;\r\n        contract.methods.getSessions().call()\r\n            .then(res => {\r\n                console.log(\"getSessions: \", res);\r\n            })\r\n    }\r\n\r\n    onFileChange = (event) => {\r\n        console.log(\"onFileChange: \", this.fileRef.current.files[0])\r\n    }\r\n\r\n    ipfsAddFile = async () => {\r\n        const file = this.fileRef.current.files[0]\r\n        console.log(this.state)\r\n        const { files } = this.state;\r\n        try {\r\n            let reader = new FileReader()\r\n            reader.readAsArrayBuffer(file)\r\n            reader.onload = () => {\r\n                console.log(reader.result);\r\n                window.IPFS.add(reader.result).then(res => {\r\n                    console.log(\"file address: \", res.path)\r\n                    let _files = [...new Set([...files, res.path])];\r\n\r\n                    this.setState({ files: _files })\r\n                    localStorage.setItem('files', JSON.stringify(_files))\r\n                })\r\n            };\r\n\r\n            reader.onerror = function () {\r\n                console.error(reader.error);\r\n            };\r\n\r\n        } catch (error) {\r\n            console.error(`Unable to perform quick upload due to ${error}`)\r\n        }\r\n    }\r\n\r\n    copy = (e) => {\r\n        const p = window.ppp = e.target.parentElement.parentElement;\r\n        navigator.clipboard.writeText(p.getElementsByTagName('input')[0].value)\r\n        p.style.color = 'green'\r\n        setTimeout(() => {\r\n            p.style.color = 'initial'\r\n        }, 2000)\r\n    }\r\n\r\n    onPriceChange = (e) => {\r\n        if (e.target.value < 0) e.target.value = 0;\r\n        let pricings = [...this.state.pricings];\r\n        let id = e.target.attributes.keyindex.value, value = parseInt(e.target.value);\r\n        pricings[id] = value;\r\n\r\n        this.setState({ \"pricings\": pricings });\r\n    }\r\n\r\n    pricing = (e) => {\r\n        const { web3, contract, pricings } = this.state;\r\n        let id = e.target.attributes.keyindex.value, value = pricings[id];\r\n        console.log(\"pricing: \", id, value);\r\n        contract.methods.pricing(value)\r\n    }\r\n    render() {\r\n        const { web3, files, pricings } = this.state;\r\n        if (!web3) {\r\n            return <div>Loading Web3, accounts, and contract...</div>;\r\n        }\r\n        return (\r\n            <Container className=\"App\">\r\n                <h1>FUNIX PRICING CHAIN!</h1>\r\n\r\n                <div>The stored value is: {this.state.storageValue}</div>\r\n                <Row>\r\n                    <Col>\r\n                        {/* <Form>\r\n              <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                <Form.Label>Upload file to IPFS</Form.Label>\r\n                <Form.Control type=\"file\" ref={this.fileRef} onChange={this.onFileChange} />\r\n                <Button variant=\"outline-primary\" onClick={this.ipfsAddFile}>Upload</Button>\r\n              </Form.Group> </Form> */} </Col> </Row>\r\n                <Row><h2>Số lượng sản phẩm:<b> {Products.length} </b></h2></Row>\r\n\r\n                <Row>\r\n                    <Products /> </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst style = {\r\n    product: {\r\n        border: \"3px solid black\",\r\n        borderImage: `linear-gradient(45deg, turquoise, greenyellow) 1`,\r\n        boxShadow: '10px 10px 5px #aaaaaa',\r\n        margin: 3,\r\n    },\r\n    productImg: {\r\n        height: 120,\r\n    },\r\n    copy: {\r\n        cursor: \"pointer\",\r\n    },\r\n    clipboard: {\r\n        fontSize: 1,\r\n        display: 'none',\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        web3: state.web3Store.web3,\r\n        accounts: state.web3Store.accounts,\r\n        contract: state.PricingChain.contract,\r\n        owner: state.PricingChain.owner,\r\n        products: state.PricingChain.products,\r\n        sessions: state.PricingChain.sessions\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    connectWeb3: connectWeb3,\r\n    getSessions: getSessions,\r\n    connectContract: connectContract,\r\n    getProducts: getProducts,\r\n})(Pricing);\r\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { createMemoryHistory } from \"history\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link, useMatch, useResolvedPath,\n} from \"react-router-dom\";\n\nimport { Navbar, Nav, Col, Container, Form, FormControl, InputGroup, Row } from 'react-bootstrap';\n// import fontawesome from '@fortawesome/fontawesome'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faCoffee, faCopy, faTag } from '@fortawesome/free-solid-svg-icons';\nimport { ToastContainer, toast as toastify } from 'react-toastify';\nimport { setToast, notify } from \"./store/toast\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport \"./App.css\";\nimport Admin from \"./Admin\";\nimport Pricing from \"./Pricing\";\nimport ConnectWeb3 from \"./coms/ConnectWeb3\";\n\n\n// fontawesome.library.add(faCopy, faTag);\n\n\nconst MyLink = ({ children, to, ...props }) => {\n  let resolved = useResolvedPath(to)\n  let match = useMatch({ path: resolved.pathname, end: true })\n  const styles = {\n    active: {\n      borderWidth: 3,\n      borderStyle: \"solid\",\n      borderColor: \"black\",\n      borderImage: \"linear-gradient(45deg, turquoise, greenyellow) 1 / 1 / 0 stretch\",\n      boxShadow: \"rgb(170 170 170) 3px 3px 8px\",\n      margin: -4,\n    }\n  }\n  return (\n    <Nav.Link href={to} className=\"active\" style={match ? styles.active : {}}\n      {...props}> {children}\n    </Nav.Link>\n  )\n}\n\n\n\nclass App extends Component {\n  state = {\n  };\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount = async () => {\n    // console.log(\"history: \", history);\n    this.props.setToast(toastify);\n  };\n\n  // notify = (message = '', type = 'error') => {\n  //   return toast[type](message);\n  // };\n\n  render() {\n    return (\n      <Container>\n        <Navbar bg=\"primary\" variant=\"dark\">\n          <Container>\n            <Navbar.Brand href=\"/\">FUNIX PRICING CHAIN!</Navbar.Brand>\n            <Nav className=\"me-auto\">\n              <MyLink to=\"/pricing\">Pricing</MyLink>\n              <MyLink to=\"/admin\">Admin</MyLink>\n            </Nav>\n            <ConnectWeb3 />\n          </Container>\n        </Navbar>\n\n        <Routes>\n          <Route path=\"/pricing\" element={<Pricing />} />\n          <Route path=\"/admin\" element={<Admin />} />\n        </Routes>\n\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={3000}\n          newestOnTop\n          closeOnClick\n          limit={4}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </Container>\n    )\n  }\n}\nconst style = {\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n  }\n}\nexport default connect(mapStateToProps, {\n  setToast, notify\n})(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport web3Reducer from './web3Store'\r\nimport toastReducer from './toast'\r\nimport PricingChainReducer from './PricingChain'\r\n\r\n// console.log(PricingChainReducer,web3Reducer)\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        web3Store: web3Reducer,\r\n        toastReducer,\r\n        PricingChain: PricingChainReducer,\r\n    },\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: false,\r\n        }),\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from \"./store/store\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}